<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js"></script>
  </head>
  <body>
    <h1><%= title %></h1>
    <p>Welcome to <%= title %></p>
    <!-- kittys表示 -->
    <input type="text" id="nameInput1" name="" data-target="1" />
    <p>zombie1 : </p><div id="zombieDna1"></div>

    <input type="text" id="nameInput2" name="" data-target="2" />
    <p>zombie2 : </p><div id="zombieDna2"></div>

    <p>BATTLE zombie1 vs zombie2</p>
    <div id="battleResult"></div>
    <input type="button" id="battleButton" value="battle start" />


    <script>
    // 入力テキストを取得する類のイベントのリスナーだ：
    $("#nameInput1").on('change', function createId() {
          var name = $(this).val();
          var JSONdata = createJSONdata('zombieGenerate1', name);
          executeJsonRpc('post', JSONdata)
          .done(
            function(data){
                console.log(data)
                $("#zombieDna1").html(data[1]);
                generateZombie(data[0], data[1]);
            }
          ).fail(
            function(data){
                console.log(data);
                $("#zombieDna1").html(data);
          }
        );
      }
    );

        $("#nameInput2").on('change', function createId() {
            var name = $(this).val();
            var JSONdata = createJSONdata('zombieGenerate2', name);
            executeJsonRpc('post', JSONdata)
            .done(
            function(data){
                console.log(data)
                $("#zombieDna2").html(data[1]);
                generateZombie(data[0], data[1]);
            }
            ).fail(
            function(data){
                console.log(data);
                $("#zombieDna2").html(data);
            }
        );
        }
    );

    // ユーザーが子猫をクリックししたときの処理だ：
    $("#battleButton").on("click", function(e) {
      // ゾンビのIDと捕食したい子猫のIDをすでに持っているものとする。
      var zombieId1 = $("#nameInput1").attr("data-target");
      var zombieId2 = $("#nameInput2").attr("data-target");
      var JSONdata = createJSONdata('zombieBattle', [zombieId1, zombieId2]);
      console.log(zombieId1);
      console.log(zombieId2);
      executeJsonRpc('battle/battling', JSONdata)
      .done(
        function(data){
            console.log(data)
            $("#battleResult").html(data[1]);
            generateZombie(data[0], data[1]);
        }
      ).fail(
        function(data){
            console.log(data);
            $("#battleResult").html("missed");
      })
    })

    function createJSONdata(method, params){
      var JSONdata = {
        "jsonrpc": "2.0",
        "method": method,
        "params": params
      };
      return JSONdata;
    }

    function executeJsonRpc(url_exec, JSONdata){
      return $.ajax({
        type: 'post',
        url: url_exec,
        data: JSON.stringify(JSONdata),
        contentType: 'application/JSON',
        dataType: 'JSON',
        scriptCharset: 'utf-8'
      });
    }

    // ゾンビのdnaを取得して画像を更新する部分だ
    // コントラクトのNewZombieイベントをリッスンして表示できるようにする部分だ：
	  // この関数はレッスン1でやったのと同じようにゾンビを表示するものだ：
    function generateZombie(name, dna) {
      let dnaStr = String(dna)
      // 16桁未満の場合はDNAの先頭に0をつける部分だ
      while (dnaStr.length < 16)
        dnaStr = "0" + dnaStr

      let zombieDetails = {
        // 最初の2桁は頭の部分だ。頭部は7種類用意してあるから、%7して
        // 0から6の番号を取得したら、そこに1を足して1から7にするのだ。
        // これを基にして、"head1.png" から"head7.png"までの
        // 画像ファイルを用意する部分だ：
        headChoice: dnaStr.substring(0, 2) % 7 + 1,
        // 次の2桁は目の部分だ。11種類用意してあるぞ：
        eyeChoice: dnaStr.substring(2, 4) % 11 + 1,
        // シャツの部分は6種類用意してある：
        shirtChoice: dnaStr.substring(4, 6) % 6 + 1,
        // 最後の6桁は色の部分だ。 CSSのフィルタを使用して更新できる。
        // 360度の色相回転（hue-rotate)を使うぞ：
        skinColorChoice: parseInt(dnaStr.substring(6, 8) / 100 * 360),
        eyeColorChoice: parseInt(dnaStr.substring(8, 10) / 100 * 360),
        clothesColorChoice: parseInt(dnaStr.substring(10, 12) / 100 * 360),
        zombieName: name,
        zombieDescription: "A Level 1 CryptoZombie",
      }
      return zombieDetails
    }

    </script>
  </body>
</html>
